
from django.db import models
from django.template.defaultfilters import slugify
from vibha.projects.models import State, ActionCenter
from vibha.utils.shortcuts import prefixrand
from vibha.utils.decorators import func_attrs
from StringIO import StringIO
import os

# $Id: models.py 460 2008-04-02 22:18:42Z suriya $

class Event(models.Model):
    a_00_UNVERIFIED,      \
    a_01_ACTIVE,          \
    a_02_COMPLETED,       = range(3)

    STATUS_CHOICES = (
        (a_00_UNVERIFIED,       "Unverified"),
        (a_01_ACTIVE,           "Active"),
        (a_02_COMPLETED,        "Completed"),
    )

    # Contact information
    first_name     = models.CharField("First name",        max_length=100)
    last_name      = models.CharField("Last name",         max_length=100)
    email          = models.EmailField("E-mail")
    address_1      = models.CharField("Address 1",  max_length=100, blank=False)
    address_2      = models.CharField("Address 2",  max_length=100, blank=True)
    city           = models.CharField("City",       max_length=100, blank=False)
    state          = models.ForeignKey(State,       null=True,      blank=True)
    zipcode        = models.CharField("Zip code",   max_length=100, blank=False)
    country        = models.CharField("Country",    max_length=100, blank=False)
    action_center  = models.ForeignKey(ActionCenter, null=True,     blank=True)
    phone          = models.CharField("Phone",      max_length=100, blank=True)
    # Event information
    honoree_first_name = models.CharField("Honoree First name",        max_length=100)
    honoree_last_name  = models.CharField("Honoree Last name",         max_length=100, blank=True)
    event_date     = models.DateField("Event date")
    display_date     = models.CharField("Display date", max_length=48, blank=True, help_text="Use this if you would like to display the date in another format")
    short_title    = models.CharField("Event name",                    max_length=256)
    url            = models.URLField("Event URL",          verify_exists=False, blank=True)
    message        = models.TextField("Event details", blank=True)
    slug           = models.SlugField(
                     max_length=200, blank=True, null=True,
                     help_text="Autogenerated (by Javascript), used for URLs of project pages")
    status         = models.IntegerField("Status",         choices=STATUS_CHOICES, default=a_00_UNVERIFIED, blank=True, null=True)
    # image
    image          = models.ImageField("Picture file",           upload_to="dream-pictures",
                                        width_field="width",     height_field="height", blank=True, null=True)
    width          = models.PositiveIntegerField("Image width",  editable=False, null=True)
    height         = models.PositiveIntegerField("Image height", editable=False, null=True)
    # thumbnail
    thumbnail      = models.ImageField("Thumbnail",              upload_to="dream-thumbs",
                                        width_field="thwidth",   height_field="thheight",
                                        editable=False,          blank=True, null=True)
    thwidth        = models.PositiveIntegerField("Thumbnail width",  editable=False, null=True)
    thheight       = models.PositiveIntegerField("Thumbnail height", editable=False, null=True)

    @func_attrs(allow_tags=True, short_description='Image')
    def show_thumb(self):
        if self.image and self.image.name is not None:
            return '<a href="%s" target="_blank"><img src="%s"></a>' % (self.image.url, self.thumbnail.url)
        else:
            return 'No Image'

    def save(self):
        """1. Set the event status to unverified it is not set.
           2. Also, set the event slug if it does not exist.
           3. Prefix the upload datetime to the filename before saving it.
           4. Create a thumbnail after saving this image"""
        if self.status is None:
            self.status = self.a_00_UNVERIFIED
        if not self.slug:
            self.slug = slugify('%s %s' % (self.honoree, self.short_title))
        self.image.name = prefixrand(self.image.name)
        super(Event, self).save()
        # Create thumbnail
        if self.image and not self.thumbnail:
            import Image
            from django.core.files.base import ContentFile 
            img = Image.open(self.image.path)
            img.thumbnail((128, 128), Image.ANTIALIAS)
            fp = StringIO()
            img.save(fp, "JPEG")
            th_filename = 'dream-thumbs/'+os.path.basename(self.image.path)
            self.thumbnail.storage.save(th_filename,ContentFile(fp.getvalue()))
            self.thumbnail.name = th_filename
            super(Event, self).save()

    def emailRecipients(self):
        return [ 'ithelpdesk@vibha.org', self.email ]

    def get_absolute_url(self):
        return 'http://dream.vibha.org/dream/events/%s/' % self.slug

    def get_admin_url(self):
        return '/admin/dream/event/%d/' % self.id

    def donation_page_url(self):
        return 'https://secure.vibha.org/donations/single/new/dream/%s/' % self.slug

    def __unicode__(self):
        return u'%s %s' % (self.honoree_first_name, self.honoree_last_name)

# vim:tw=150:nowrap:ts=4:sw=4:et:
